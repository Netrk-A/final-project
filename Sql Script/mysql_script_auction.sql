
-- Table: USER
CREATE TABLE USER (
    USER_ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_NAME VARCHAR(100),
    EMAIL VARCHAR(255) UNIQUE NOT NULL,
    PHONE VARCHAR(20),
    PASSWORD VARCHAR(255) NOT NULL,
    EMAIL_ACTIVATION BOOLEAN,
    BUYER_ACTIVATION BOOLEAN,
    SELLER_ACTIVATION BOOLEAN,
    DISPLAY_USERNAME VARCHAR(50),
    COUNTRY VARCHAR(100),
    GOV VARCHAR(100),
    CITY VARCHAR(100),
    ADDRESS VARCHAR(255),
    INLAND BOOLEAN,
    FULL_ID_NAME VARCHAR(255),
    ID_NO VARCHAR(50),
    ID_PHOTO BLOB,
    BANK_NAME VARCHAR(100),
    IBAN VARCHAR(50),
    BALANCE DECIMAL(10, 2),
    LOYALTY_POINTS INT,
    DIS_CODE VARCHAR(20),
    OTP int ,            
    EXPIRY_TIME int ,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Table: CATEGORY
CREATE TABLE CATEGORY (
    CAT_ID INT PRIMARY KEY AUTO_INCREMENT,
    CAT_NAME VARCHAR(100) NOT NULL
);

-- Table: ITEM
CREATE TABLE ITEM (
    I_ID INT PRIMARY KEY AUTO_INCREMENT,
    ITEM_NAME VARCHAR(255),
    DESCRIPTION TEXT,
    PHOTO BLOB,
    STARTING_PRICE DECIMAL(10, 2),
    EXPECTED_PRICE DECIMAL(10, 2),
    LOCATION VARCHAR(255),
    START_DATE DATE,
    DELIVERED_DATE DATE,
    PERIOD_OF_BID INT,
    STATUS VARCHAR(50),
    SHIP_PRICE DECIMAL(10, 2),
    SHIP_DATE DATE,
    ARRIVAL_DATE DATE,
    CAT_ID INT,
    POST_BY INT,
    SHIPD_BY INT,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CAT_ID) REFERENCES CATEGORY(CAT_ID),
    FOREIGN KEY (POST_BY) REFERENCES USER(USER_ID),
    FOREIGN KEY (SHIPD_BY) REFERENCES USER(USER_ID)
);

-- Table: BIDS
CREATE TABLE BIDS (
    BID_ID INT PRIMARY KEY AUTO_INCREMENT,
    BID_AMOUNT DECIMAL(10, 2),
    BID_TIME DATETIME,
    WIN_STATUS BOOLEAN,
    BIDDER_ID INT,
    I_ID INT,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (BIDDER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (I_ID) REFERENCES ITEM(I_ID)
);

-- Table: FEEDBACK
CREATE TABLE FEEDBACK (
    FEEDBACK_ID INT PRIMARY KEY AUTO_INCREMENT,
    DATE DATE,
    RATING INT CHECK (RATING BETWEEN 1 AND 5),
    COMMENT TEXT,
    BUYER_ID INT,
    SELLER_ID INT,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (BUYER_ID) REFERENCES USER(USER_ID),
    FOREIGN KEY (SELLER_ID) REFERENCES USER(USER_ID)
);

-- Table: PASSWORD_RESET
CREATE TABLE PASSWORD_RESET (
    USER_ID PRIMARY KEY AUTO_INCREMENT,              
    EMAIL VARCHAR(255) NOT NULL,          
    TOKEN VARCHAR(255) NOT NULL,          
    EXPIRES DATETIME,                     
    CREATED_AT CURRENT_TIMESTAMP,                  
);
